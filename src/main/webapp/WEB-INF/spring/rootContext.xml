<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
 


	<!-- 공통기능 롤백, 커밋 빈 생성  -->
	<bean	id="transactionManager"
			class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- Rollback, Commit 대상 메소드 지정 -->
	<tx:advice	id="transactionAdvisor"
				transaction-manager="transactionManager">
				<tx:attributes>
					<tx:method name="read*" read-only="true"/>
					<tx:method name="create*" rollback-for="RuntimeException"/>
					<tx:method name="signup*" rollback-for="RuntimeException"/>
					<tx:method name="update*" rollback-for="RuntimeException"/>
					<tx:method name="delete*" rollback-for="RuntimeException"/>
				</tx:attributes>
	</tx:advice>
	
	<!-- Transaction(Commit, Rollback) 대상 클래스 지정 -->
	<aop:config>
		<aop:pointcut 	expression="execution( * com.ktds..service.*ServiceImpl.*(..) )" 
						id="transactionPointcut" />
		<aop:advisor 	advice-ref="transactionAdvisor"
						pointcut-ref="transactionPointcut"/>
	</aop:config>




<!-- DB에 관련된 연동 설정한다 -->

	<!-- DBCP 설정 -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driver}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.id}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	<!-- Spring jdbc 생성 -->

	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	
	<!-- MyBatis 설정 -->
	<bean	id="sqlSessionFactory"
			class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="mapperLocations" value="classpath:com/ktds/**/dao/sql/*.xml" />
			<property name="configLocation" value="classpath:mybatis.xml"></property>
	</bean>

	<bean	id="sqlSessionTemplate"
            class="org.mybatis.spring.SqlSessionTemplate">
            <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>   

</beans>
